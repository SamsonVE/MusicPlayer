{
  "_args": [
    [
      {
        "raw": "backbone.soundmanager2@git://github.com/audiosocket/backbone.soundmanager2.git",
        "scope": null,
        "escapedName": "backbone.soundmanager2",
        "name": "backbone.soundmanager2",
        "rawSpec": "git://github.com/audiosocket/backbone.soundmanager2.git",
        "spec": "git://github.com/audiosocket/backbone.soundmanager2.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:audiosocket/backbone.soundmanager2.git",
          "sshUrl": "git+ssh://git@github.com/audiosocket/backbone.soundmanager2.git",
          "httpsUrl": "git+https://github.com/audiosocket/backbone.soundmanager2.git",
          "gitUrl": "git://github.com/audiosocket/backbone.soundmanager2.git",
          "shortcut": "github:audiosocket/backbone.soundmanager2",
          "directUrl": "https://raw.githubusercontent.com/audiosocket/backbone.soundmanager2/master/package.json"
        }
      },
      "/Applications/MAMP/htdocs/MusicPlayer"
    ]
  ],
  "_from": "git://github.com/audiosocket/backbone.soundmanager2.git",
  "_id": "backbone.soundmanager2@0.1.2",
  "_inCache": true,
  "_location": "/backbone.soundmanager2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "backbone.soundmanager2@git://github.com/audiosocket/backbone.soundmanager2.git",
    "scope": null,
    "escapedName": "backbone.soundmanager2",
    "name": "backbone.soundmanager2",
    "rawSpec": "git://github.com/audiosocket/backbone.soundmanager2.git",
    "spec": "git://github.com/audiosocket/backbone.soundmanager2.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:audiosocket/backbone.soundmanager2.git",
      "sshUrl": "git+ssh://git@github.com/audiosocket/backbone.soundmanager2.git",
      "httpsUrl": "git+https://github.com/audiosocket/backbone.soundmanager2.git",
      "gitUrl": "git://github.com/audiosocket/backbone.soundmanager2.git",
      "shortcut": "github:audiosocket/backbone.soundmanager2",
      "directUrl": "https://raw.githubusercontent.com/audiosocket/backbone.soundmanager2/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/audiosocket/backbone.soundmanager2.git#299f9489c6515f16bcd26684ef3664c787f6bd9d",
  "_shasum": "159439fe927ba1b1badd26900069c6ee778360a8",
  "_shrinkwrap": null,
  "_spec": "backbone.soundmanager2@git://github.com/audiosocket/backbone.soundmanager2.git",
  "_where": "/Applications/MAMP/htdocs/MusicPlayer",
  "author": {
    "name": "Audiosocket",
    "email": "tech@audiosocket.com"
  },
  "bugs": {
    "url": "http://github.com/audiosocket/backbone.soundmanager2/issues"
  },
  "dependencies": {
    "backbone": ">=0.9.2",
    "underscore": ">=1.3.3"
  },
  "description": "Wrapper to use SoundManager2 audio player with backbone models.",
  "devDependencies": {
    "coffee-script": ">=1.3.1"
  },
  "gitHead": "299f9489c6515f16bcd26684ef3664c787f6bd9d",
  "homepage": "http://github.com/audiosocket/backbone.soundmanager2",
  "lib": ".",
  "licences": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "backbone.soundmanager2.js",
  "name": "backbone.soundmanager2",
  "optionalDependencies": {},
  "readme": "backbone.soundmanager2\n======================\n\n`Backbone.SoundManager2` is a wrapper around [SoundManager2](http://www.schillmania.com/projects/soundmanager2/)\nthat helps including and using it within a [Backbone](http://backbonejs.org/) application.\n\nHow to use?\n-----------\n\nYou should initialize a single `Backbone.SoundManager2` player object, for instance as a global `App.player`:\n\n    App.player = new Backbone.SoundManager2\n    \nThe player expects to be given `playable` objects, that is `Backbone.Model` objects, extended with a `getAudioURL`\nasynchronous method to return a URL to be played.\n\n```\nApp.player.load playable    # Play a playable model\nApp.player.toggle()         # Toggle play/pause\nApp.player.stop()           # You got this one, right? :-)\nApp.player.setPosition 0.25 # Set playing position to 25%\nApp.player.setVolume   0.75 # Set volume to 75%\n```\n\nPlease, refer to the code for more details about the available functions. Each of them are properly\ndocumented.\n\nHow to integrate?\n-----------------\n\nA `Backbone.SoundManager2` instance will emit events related to its actions. Those events are also\nemitted on any playable model current being played. \n\nYou can use those to integrate the player within you `Backbone.View`. For instance, for a global\nplayer view:\n\n```\nclass App.View.Player extends Backbone.View\n  initialize: ->\n    App.player.on \"released\", @clear\n    App.player.on \"loaded\",   @loaded\n    App.player.on \"loading\",  @loading\n    App.player.on \"paused\",   @paused\n    App.player.on \"played\",   @played\n    App.player.on \"playing\",  @updatePosition\n    App.player.on \"resumed\",  @played\n    App.player.on \"stopped\",  @stopped\n    App.player.on \"finished\", @finished\n\n  updatePosition: (sound) =>\n    return unless sound?\n\n    @$(\".bar .filler\").css \"width\",\n      \"#{Math.round(100 * sound.position / sound.durationEstimate)}%\"\n\n    position = new Date sound.position\n\n    # Duration is an estimate so we're better\n    # computing it each time..\n\n    duration = new Date sound.durationEstimate\n\n    @$(\".played\").text _.sprintf(\"%d:%02d\", position.getMinutes(), position.getSeconds())\n    @$(\".remaining\").text _.sprintf(\"%d:%02d\", duration.getMinutes(), duration.getSeconds())\n```\n\nLikewise, for a view referring to a `playable` model:\n\n```\nclass App.View.Track extends Backbone.View\n  initialize: ->\n    @model.on \"player:paused\",   @paused\n    @model.on \"player:played\",   @played\n    @model.on \"player:resumed\",  @played\n    @model.on \"player:stopped\",  @stopped\n    @model.on \"player:finished\", @finished\n```\n\nbackbone.modelizer\n------------------\n\nIf [backbone.modelizer](https://github.com/audiosocket/backbone.modelizer) is installed, `playable.retain()` \nwill be called when `playable` is being played and `playable.release()` will be called when `playable` is being released.\n\nUsing\n=====\n\nJust include `backbone.soundmanager2.js` after including `backbone.js` and `soundManager2` and before \nany code that makes use of it and you're ready to go!\n\nIf you want to use it as a [browserify](http://browserify.org/) module, simply include it in your `package.json`\n\n    \"dependencies\": {\n      \"backbone.soundmanager2\": \"git://github.com/audiosocket/backbone.soundmanager2.git\"\n    }\n\nThen, after doing `npm install`, you'll be able to require it in your app. For example:\n\n    var Backbone.SoundManager2 = require('backbone.soundmanager2');\n    \n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/audiosocket/backbone.soundmanager2.git"
  },
  "version": "0.1.2"
}
